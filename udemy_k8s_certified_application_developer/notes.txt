#VS code extension for yaml k8s definition files: YAML
Add below in settings.json:    
    "yaml.schemas": {
        "kubernetes": "*.yaml"
    }

# k8s configmaps
kubectl create configmap <configmap_name> --from-literal=<key>=<value> \ 
                                          --from-literal=<key>=<value> 
kubectl create configmap <configmap_name> --from-file=<path_to_file>
#config file format:
APP_COLOR: blue
APP_MODE: prod

kubectl get configmaps
kubectl describe configmaps

#Adding a configmap while creating a pod:
(1) envFrom:
    - configMapRef:
        name: app-config
(2) Single env=>
    env:
    - name: APP_COLOR
      valueFrom:
        configMapKeyRef:
          name: app-config
          key: APP_COLOR

(3) Volumes=>
  volumes:
  - name: app-config-volume
    configMap:
      name: app-config

# k8s Secret
kubectl create secret generic <secret_name> --from-literal=<key>=<value>
kubectl create secret generic <secret_name> --from-file=<file_name>

kubectl get secrets
kubectl describe secret <secret_name>
kubectl get secret <secret_name> -o yaml # This will show the encoded secret values

kubectl create -f secret_definition.yaml # declarative method
# While creating secrets using the declarative method, the secret values should be stored in an encoded format. Not needed when using the imperative method
$ echo -n "password" | base64

#Adding a secret while creating a pod:
(1) envFrom:
    - secretRef:
        name: app-secret
(2) single Env=>
    env:
    - name: DB_PASSWORD
      valueFrom:
        secretKeyRef:
          name: app-secret
          key: DB_PASSWORD
(3) Volume=>
    volumes:
    - name: app-secret-volume
      secret:
        secretName: app-secret

